stages: 
  - build
  - docker
  - deploy

maven-build:
  image: maven:3-openjdk-17
  stage: build
  script: "mvn package -B -DskipTests"
  artifacts:
    paths:
      - target/*.jar

docker-dev:
  stage: docker
  image: docker:latest
  before_script:
    - docker login -u $DOCKERLOGIN -p $DOCKERTOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_IMAGE_API:dev .
    - docker push $CI_IMAGE_API:dev
  except:
    - main


docker-main:
  stage: docker
  image: docker:latest
  before_script:
    - docker login -u $DOCKERLOGIN -p $DOCKERTOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_IMAGE_API:main .
    - docker push $CI_IMAGE_API:main
  only:
    - main

deploy-main:
  stage: deploy
  before_script:
    - "which ssh-agent || (apk update && apk add openssh-client bash curl)"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

deploy-prod:
  stage: deploy
  before_script:
    - "which ssh-agent || (apk update && apk add openssh-client bash curl)"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - bash -c "ssh-add <(echo \"$SSH_PRIVATE_KEY\")"
    - export COMPOSE_HTTP_TIMEOUT=200
    - ssh root@$HOST "docker-compose -f ~/docker-compose.yml down --remove-orphans"
    - ssh root@$HOST "docker-compose -f ~/docker-compose.yml pull"
    - ssh root@$HOST "docker-compose -f ~/docker-compose.yml up -d"
  only:
    - main
    - feature/deployment